/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newCommission",
        type: "uint256",
      },
    ],
    name: "CommissionChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previosOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "allow",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_burnedAmount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommission",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaoAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mintedAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newCommission",
        type: "uint256",
      },
    ],
    name: "setCommission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
    ],
    name: "setDaoAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "totSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [
      {
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060008054336001600160a01b0319918216811783556103e8600281905581845260056020818152604080872084905586546001600160a01b031687526006825280872090915285209190915560035560048054909216179055610a8590819061007a90396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a25780639dc29fac116100715780639dc29fac1461026a578063a9059cbb1461027d578063dd62ed3e14610290578063e65d6b49146102c9578063f2fde38b146102d157600080fd5b806370a08231146101f95780638da5cb5b1461022257806395d89b41146102355780639a3cac6a1461025757600080fd5b806323b872dd116100de57806323b872dd146101a4578063313ce567146101b7578063355e6b43146101d157806340c10f19146101e657600080fd5b806306fdde0314610110578063095ea7b31461014a57806318160ddd1461016d5780631d68702d1461017f575b600080fd5b6101346040518060400160405280600581526020016453657a616d60d81b81525081565b6040516101419190610954565b60405180910390f35b61015d610158366004610913565b6102e4565b6040519015158152602001610141565b6002545b604051908152602001610141565b6001546001600160a01b03165b6040516001600160a01b039091168152602001610141565b61015d6101b23660046108d8565b610368565b6101bf601281565b60405160ff9091168152602001610141565b6101e46101df36600461093c565b6103e7565b005b61015d6101f4366004610913565b610461565b610171610207366004610885565b6001600160a01b031660009081526005602052604090205490565b60005461018c906001600160a01b031681565b61013460405180604001604052806003815260200162535a4d60e81b81525081565b6101e4610265366004610885565b610525565b61015d610278366004610913565b610586565b61015d61028b366004610913565b6106a3565b61017161029e3660046108a6565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b600354610171565b61015d6102df366004610885565b610702565b3360009081526006602090815260408083206001600160a01b0386168452909152812080548391908390610319908490610a0a565b90915550506040518281526001600160a01b0384169033907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906020015b60405180910390a350600192915050565b600083600354836103799190610a0a565b6003546001600160a01b03831660009081526005602052604090205482916103a091610a0a565b10156103c75760405162461bcd60e51b81526004016103be906109de565b60405180910390fd5b6103d086610799565b6103db8686866107b9565b50600195945050505050565b6000546001600160a01b031633148061040a57506001546001600160a01b031633145b6104265760405162461bcd60e51b81526004016103be906109a7565b60038190556040518181527f839e4456845dbc05c7d8638cf0b0976161331b5f9163980d71d9a6444a326c619060200160405180910390a150565b600080546001600160a01b031633148061048557506001546001600160a01b031633145b6104a15760405162461bcd60e51b81526004016103be906109a7565b6001600160a01b038316600090815260056020526040812080548492906104c9908490610a0a565b9250508190555081600260008282546104e29190610a0a565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610357565b6000546001600160a01b031633148061054857506001546001600160a01b031633145b6105645760405162461bcd60e51b81526004016103be906109a7565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b03831660009081526005602052604081205490918491849182916105b49190610a0a565b10156105d25760405162461bcd60e51b81526004016103be906109de565b6000546001600160a01b03163314806105f557506001546001600160a01b031633145b6106115760405162461bcd60e51b81526004016103be906109a7565b6001600160a01b03851660009081526005602052604081208054869290610639908490610a22565b9250508190555083600260008282546106529190610a22565b90915550506040518481526000906001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3506001949350505050565b600354336000818152600560205260408120549092849182916106c591610a0a565b10156106e35760405162461bcd60e51b81526004016103be906109de565b6106ec33610799565b6106f73386866107b9565b506001949350505050565b600080546001600160a01b031633148061072657506001546001600160a01b031633145b6107425760405162461bcd60e51b81526004016103be906109a7565b600080546001600160a01b038481166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a360019150505b919050565b6004546003546107b69183916001600160a01b03909116906107b9565b50565b6001600160a01b0383166000908152600560205260409020546107dd908290610a22565b6001600160a01b03808516600090815260056020526040808220939093559084168152205461080d908290610a0a565b6001600160a01b0380841660008181526005602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108619085815260200190565b60405180910390a3505050565b80356001600160a01b038116811461079457600080fd5b600060208284031215610896578081fd5b61089f8261086e565b9392505050565b600080604083850312156108b8578081fd5b6108c18361086e565b91506108cf6020840161086e565b90509250929050565b6000806000606084860312156108ec578081fd5b6108f58461086e565b92506109036020850161086e565b9150604084013590509250925092565b60008060408385031215610925578182fd5b61092e8361086e565b946020939093013593505050565b60006020828403121561094d578081fd5b5035919050565b6000602080835283518082850152825b8181101561098057858101830151858201604001528201610964565b818111156109915783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601c908201527f4f776e61626c653a2063616c6c6572206973206e6f74206f776e657200000000604082015260600190565b602080825260129082015271496e73756666696369656e742066756e647360701b604082015260600190565b60008219821115610a1d57610a1d610a39565b500190565b600082821015610a3457610a34610a39565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122062069c007cb7bdeae9e7f889787491623c60f40ef0a1428a00c49fa22e781d0364736f6c63430008040033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
